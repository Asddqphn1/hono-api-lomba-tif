generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  PESERTA
  USERS
  JURI
  ADMIN
}

enum Jenis_lomba {
  INDIVIDU
  TIM
}

model lomba {
  id           String         @id @db.VarChar(20)
  tanggal      DateTime       @db.Date
  jenis_lomba  Jenis_lomba
  lokasi       String         @db.VarChar(50)
  nama         String         @db.VarChar(40)
  url          String         @db.VarChar(500)
  bataswaktu   DateTime       @db.Date
  deskripsi    String?        @db.Text
  jumlah_tim   Int?
  juri         juri[]
  pesertalomba pesertalomba[]
  sertifikat   sertifikat[]
}

model sertifikat {
  id       String @id @db.VarChar(20)
  url      String @db.VarChar(50)
  lomba_id String @db.VarChar(10)
  lomba    lomba  @relation(fields: [lomba_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "sertifikat_lomba_fk")
}

model users {
  id       String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email    String   @unique @db.VarChar(30)
  password String   @db.VarChar(255)
  nama     String   @db.VarChar(30)
  role     Role     @default(USERS)
  juri     juri[]
  peserta  peserta[]
  admin    admin[]
}

model admin {
  id           String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  users_id     String   @db.Uuid
  created_at   DateTime @default(now())
  users        users    @relation(fields: [users_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "admin_users_fk")
}

model juri {
  id         String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  nama       String     @db.VarChar(30)
  lomba_id   String     @db.VarChar(30)
  created_at DateTime   @default(now())
  users_id   String     @db.Uuid
  lomba      lomba      @relation(fields: [lomba_id], references: [id], onDelete: Cascade, onUpdate: Cascade, map: "juri_lomba_fk")
  users      users      @relation(fields: [users_id], references: [id], onDelete: Cascade, onUpdate: Cascade, map: "juri_users_fk")
  penilaian  penilaian[]
}

model penilaian {
  id                     String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  juri_id                String   @db.Uuid
  submission_id          String   @db.Uuid
  status_penilaian       String   @db.Char(1)
  nilai_penilaian        Decimal? @db.Decimal(5, 2)
  deskripsi_penilaian    String?  @db.VarChar(100)
  created_at             DateTime @default(now())
  juri                   juri     @relation(fields: [juri_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  submission             submission @relation(fields: [submission_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model peserta {
  id           String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  nama         String        @db.VarChar(30)
  users_id     String        @db.Uuid
  created_at   DateTime      @default(now())
  users        users         @relation(fields: [users_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "peserta_users_fk")
  pesertalomba pesertalomba[]
  anggotaTim   anggotaTim[]
}

model pesertalomba {
  id              String      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  peserta_id      String      @db.Uuid
  lomba_id        String      @db.VarChar(20)
  submission      submission?
  lomba           lomba       @relation(fields: [lomba_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "pesertalomba_lomba_fk")
  peserta         peserta     @relation(fields: [peserta_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "pesertalomba_peserta_fk")

  @@unique([peserta_id, lomba_id])
}

model submission {
  id              String      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  pesertalomba_id String      @db.Uuid
  file_url        String      @db.VarChar(255)
  submission_time DateTime    @default(now()) @db.Timestamptz(6)
  pesertalomba    pesertalomba @relation(fields: [pesertalomba_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  penilaian       penilaian[]
  
  @@unique([pesertalomba_id])
}

model anggotaTim {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  nama        String   @db.VarChar(30)
  peserta_id  String   @db.Uuid
  created_at  DateTime @default(now())
  peserta     peserta  @relation(fields: [peserta_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}